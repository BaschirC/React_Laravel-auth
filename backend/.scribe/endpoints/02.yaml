name: 'Product resource'
description: |-

  APIs to manage the products
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/products
    metadata:
      groupName: 'Product resource'
      groupDescription: |-

        APIs to manage the products
      subgroup: Product
      subgroupDescription: 'Manage your restaurant products here.'
      title: 'Get all products'
      description: 'This endpoint retrieves a list of all products.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      with:
        name: with
        description: |-
          The relations to include in the response.
            Accepts comma-separated values.

           

            <span>Example</span>: branch,recipes

            Possibilities:
            - branch
            - recipes
            - productVariations
            - productAddons
            - productCategory
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      paginate:
        name: paginate
        description: |-
          Returns the specified number of items per page.
          </br>
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: |-
          Returns the page specified in the query param.
          </br>
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      paginate: 10
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products/create
    metadata:
      groupName: 'Product resource'
      groupDescription: |-

        APIs to manage the products
      subgroup: Product
      subgroupDescription: 'Manage your restaurant products here.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/products
    metadata:
      groupName: 'Product resource'
      groupDescription: |-

        APIs to manage the products
      subgroup: Product
      subgroupDescription: 'Manage your restaurant products here.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: 'Product resource'
      groupDescription: |-

        APIs to manage the products
      subgroup: Product
      subgroupDescription: 'Manage your restaurant products here.'
      title: 'Get one product'
      description: 'This endpoint retrieves one product by id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      with:
        name: with
        description: |-
          The relations to include in the response.
            Accepts comma-separated values.

           

            <span>Example</span>: branch,recipes

            Possibilities:
            - branch
            - recipes
            - productVariations
            - productAddons
            - productCategory
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      paginate:
        name: paginate
        description: |-
          Returns the specified number of items per page.
          </br>
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: |-
          Returns the page specified in the query param.
          </br>
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      paginate: 10
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: 'Product resource'
      groupDescription: |-

        APIs to manage the products
      subgroup: Product
      subgroupDescription: 'Manage your restaurant products here.'
      title: 'Update one product'
      description: |-
        This endpoint updates one product by id. The request body should contain the fields that
        should be updated. The request body supports the following fields:
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: |-
          The name of the product. An object containing the names for
          each of the supported locales. The supported locales are defined in the `app.locales` config
          option.
        required: true
        example:
          en: Apple
          ro: Mere
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
      branch_id:
        name: branch_id
        description: 'The branch id of the product.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: |-
          The description of the product. An object containing the names for
           each of the supported locales. The supported locales are defined in the `app.locales` config
           option.
        required: true
        example:
          en: 'English description'
          ro: 'Descriere in romana'
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image_url:
        name: image_url
        description: 'The image of the product.'
        required: false
        example: 'https://example.com/image.png'
        type: url
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name:
        en: Apple
        ro: Mere
      branch_id: 1
      description:
        en: 'English description'
        ro: 'Descriere in romana'
      image_url: 'https://example.com/image.png'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/product-categories
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: 'Product Category'
      subgroupDescription: 'Manage your restaurant categories here.'
      title: 'Get all product categories'
      description: 'This endpoint retrieves a list of all product categories.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      with:
        name: with
        description: |-
          The relations to include in the response.
            Accepts comma-separated values.

           

            <span>Example</span>: menu,products

            Possibilities:
            - menu
            - products
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      paginate:
        name: paginate
        description: |-
          Returns the specified number of items per page.
          </br>
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: |-
          Returns the page specified in the query param.
          </br>
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      paginate: 10
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/product-categories/create
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: 'Product Category'
      subgroupDescription: 'Manage your restaurant categories here.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/product-categories
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: 'Product Category'
      subgroupDescription: 'Manage your restaurant categories here.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/product-categories/{id}'
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: 'Product Category'
      subgroupDescription: 'Manage your restaurant categories here.'
      title: 'Get one product category'
      description: 'This endpoint retrieves one product category by id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      with:
        name: with
        description: |-
          The relations to include in the response.
            Accepts comma-separated values.

           

            <span>Example</span>: menu,products

            Possibilities:
            - menu
            - products
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      paginate:
        name: paginate
        description: |-
          Returns the specified number of items per page.
          </br>
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: |-
          Returns the page specified in the query param.
          </br>
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      paginate: 10
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/product-categories/{id}'
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: 'Product Category'
      subgroupDescription: 'Manage your restaurant categories here.'
      title: 'Update one Product category'
      description: |-
        This endpoint updates one product category by id. The request body should contain the fields that
        should be updated. The request body supports the following fields:
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: |-
          The name of the product category. An object containing the names for
          each of the supported locales. The supported locales are defined in the `app.locales` config
          option.
        required: true
        example:
          en: Apple
          ro: Mere
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: |-
          The description of the product cateogry. An object containing the names for
           each of the supported locales. The supported locales are defined in the `app.locales` config
           option.
        required: true
        example:
          en: 'English description'
          ro: 'Descriere in romana'
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort_order:
        name: sort_order
        description: ''
        required: false
        example: '1'
        type: integer.
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name:
        en: Apple
        ro: Mere
      description:
        en: 'English description'
        ro: 'Descriere in romana'
      sort_order: '1'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/recipes
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Recipe
      subgroupDescription: 'Manage your restaurant recipes here.'
      title: 'Get all recipes'
      description: |-
        This endpoint retrieves a list of all recipes. It supports filtering for orphaned ingredients
        and including related data.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      with:
        name: with
        description: |-
          The relations to include in the response.
            Accepts comma-separated values.

           

            <span>Example</span>: products,ingredients

            Possibilities:
            - recipeIngredients
            - ingredients
            - products
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      orphans:
        name: orphans
        description: |-
          1|0 Filter recipes based on their association with recipes.
            

            - If true, returns only recipes not associated with any recipes.
            - If false, returns only recipes associated with at least one recipe.
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      compound:
        name: compound
        description: |-
          1|0 Filter recipes based on type.
            

            - If true, returns only recipes that are marked as compound.
            - If false, returns only recipes which are not marked as compound.
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      paginate:
        name: paginate
        description: |-
          Returns the specified number of items per page.
          </br>
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: |-
          Returns the page specified in the query param.
          </br>
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      paginate: 10
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/recipes/create
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Recipe
      subgroupDescription: 'Manage your restaurant recipes here.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/recipes
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Recipe
      subgroupDescription: 'Manage your restaurant recipes here.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/recipes/{id}'
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Recipe
      subgroupDescription: 'Manage your restaurant recipes here.'
      title: 'Get one recipe'
      description: 'This endpoint retrieves one recipe by id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the recipe.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      with:
        name: with
        description: |-
          The relations to include in the response.
            Accepts comma-separated values.

           

            <span>Example</span>: products,ingredients

            Possibilities:
            - recipeIngredients
            - ingredients
            - products
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      orphans:
        name: orphans
        description: |-
          1|0 Filter recipes based on their association with recipes.
            

            - If true, returns only recipes not associated with any recipes.
            - If false, returns only recipes associated with at least one recipe.
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      compound:
        name: compound
        description: |-
          1|0 Filter recipes based on type.
            

            - If true, returns only recipes that are marked as compound.
            - If false, returns only recipes which are not marked as compound.
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      paginate:
        name: paginate
        description: |-
          Returns the specified number of items per page.
          </br>
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: |-
          Returns the page specified in the query param.
          </br>
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      paginate: 10
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/recipes/{id}'
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Recipe
      subgroupDescription: 'Manage your restaurant recipes here.'
      title: 'Update one recipe'
      description: |-
        This endpoint updates one recipe by id. The request body should contain the fields that
        should be updated. The request body supports the following fields:
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the recipe.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: |-
          The name of the recipe. An object containing the names for
          each of the supported locales. The supported locales are defined in the `app.locales` config
          option.
        required: true
        example:
          en: Apple
          ro: Mere
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
      yield_quantity:
        name: yield_quantity
        description: 'The yield quantity of the recipe.'
        required: true
        example: '2.50'
        type: decimal
        enumValues: []
        exampleWasSpecified: true
        custom: []
      number_of_portions:
        name: number_of_portions
        description: 'The number of portions the recipe makes.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      prep_time:
        name: prep_time
        description: 'The preparation time of the recipe.'
        required: true
        example: '"1 hour"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      cook_time:
        name: cook_time
        description: 'The cook time of the recipe.'
        required: true
        example: '"30 minutes"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      total_time:
        name: total_time
        description: 'The total time of the recipe.'
        required: true
        example: '"1 hour 30 minutes"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      is_compound:
        name: is_compound
        description: 'If the recipe is a compound recipe.'
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      category:
        name: category
        description: |-
          The category of the recipe. An object containing the names for
          each of the supported locales. The supported locales are defined in the `app.locales` config
          option.
        required: true
        example:
          en: Dessert
          ro: Dulceata
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
      cuisine_type:
        name: cuisine_type
        description: |-
          The cuisine type of the recipe. An object containing the names for
          each of the supported locales. The supported locales are defined in the `app.locales` config
          option.
        required: true
        example:
          en: Italian
          ro: Italiana
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
      instructions:
        name: instructions
        description: 'The instructions of the recipe.'
        required: true
        example:
          en: 'Mix ingredients'
          ro: 'Amesteca ingredientele'
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image_url:
        name: image_url
        description: 'The image of the recipe.'
        required: false
        example: 'https://example.com/image.png'
        type: url
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name:
        en: Apple
        ro: Mere
      yield_quantity: '2.50'
      number_of_portions: 4
      prep_time: '"1 hour"'
      cook_time: '"30 minutes"'
      total_time: '"1 hour 30 minutes"'
      is_compound: true
      category:
        en: Dessert
        ro: Dulceata
      cuisine_type:
        en: Italian
        ro: Italiana
      instructions:
        en: 'Mix ingredients'
        ro: 'Amesteca ingredientele'
      image_url: 'https://example.com/image.png'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/menus
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Menu
      subgroupDescription: 'Manage your restaurant menus here.'
      title: 'Get all menus'
      description: 'This endpoint retrieves a list of all menus.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      with:
        name: with
        description: |-
          The relations to include in the response.
            Accepts comma-separated values.

           

            <span>Example</span>: branch,productCategories

            Possibilities:
            - branch
            - productCategories
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      paginate:
        name: paginate
        description: |-
          Returns the specified number of items per page.
          </br>
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: |-
          Returns the page specified in the query param.
          </br>
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      paginate: 10
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/menus/create
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Menu
      subgroupDescription: 'Manage your restaurant menus here.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/menus
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Menu
      subgroupDescription: 'Manage your restaurant menus here.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/menus/{id}'
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Menu
      subgroupDescription: 'Manage your restaurant menus here.'
      title: 'Get one menu'
      description: 'This endpoint retrieves one menu by id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      with:
        name: with
        description: |-
          The relations to include in the response.
            Accepts comma-separated values.

           

            <span>Example</span>: branch,productCategories

            Possibilities:
            - branch
            - productCategories
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      paginate:
        name: paginate
        description: |-
          Returns the specified number of items per page.
          </br>
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      page:
        name: page
        description: |-
          Returns the page specified in the query param.
          </br>
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      paginate: 10
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/menus/{id}'
    metadata:
      groupName: 'Product resource'
      groupDescription: ''
      subgroup: Menu
      subgroupDescription: 'Manage your restaurant menus here.'
      title: 'Update one Menu'
      description: |-
        This endpoint updates one menu by id. The request body should contain the fields that
        should be updated. The request body supports the following fields:
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: |-
          The name of the menu. An object containing the names for
          each of the supported locales. The supported locales are defined in the `app.locales` config
          option.
        required: true
        example:
          en: Apple
          ro: Mere
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: |-
          The description of the menu. An object containing the names for
           each of the supported locales. The supported locales are defined in the `app.locales` config
           option.
        required: true
        example:
          en: 'English description'
          ro: 'Descriere in romana'
        type: object
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name:
        en: Apple
        ro: Mere
      description:
        en: 'English description'
        ro: 'Descriere in romana'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3|bSUhEQIhfBLUqHXFhQq9P2f2FdnKFKWptVSoEhVBfe0d5ef3'
    controller: null
    method: null
    route: null
    custom: []
